{"ast":null,"code":"import { Response } from \"miragejs\";\n/**\n * All the routes related to Videos are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all videos in the db.\n * send GET Request at /api/videos\n * */\n\nexport const getAllVideosHandler = function () {\n  try {\n    return new Response(200, {}, {\n      videos: this.db.videos\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};\n/**\n * This handler handles uploads a new video to the db.\n * send POST Request at /api/user/videos/\n * */\n// TODO: postVideoHandler\n\n/**\n * This handler handles gets all videos in the db.\n * send GET Request at /api/user/videos/:videoId\n * */\n\nexport const getVideoHandler = function (schema, request) {\n  const {\n    videoId\n  } = request.params;\n\n  try {\n    const video = schema.videos.findBy({\n      _id: videoId\n    }).attrs;\n    return new Response(200, {}, {\n      video\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};","map":{"version":3,"sources":["C:/My stuff/S/2022 Projects/video library app/TradePlay/TradePlay/src/backend/controllers/VideoController.js"],"names":["Response","getAllVideosHandler","videos","db","error","getVideoHandler","schema","request","videoId","params","video","findBy","_id","attrs"],"mappings":"AAAA,SAASA,QAAT,QAAyB,UAAzB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,mBAAmB,GAAG,YAAY;AAC7C,MAAI;AACF,WAAO,IAAID,QAAJ,CAAa,GAAb,EAAkB,EAAlB,EAAsB;AAAEE,MAAAA,MAAM,EAAE,KAAKC,EAAL,CAAQD;AAAlB,KAAtB,CAAP;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,WAAO,IAAIJ,QAAJ,CACL,GADK,EAEL,EAFK,EAGL;AACEI,MAAAA;AADF,KAHK,CAAP;AAOD;AACF,CAZM;AAcP;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAcD,OAAO,CAACE,MAA5B;;AACA,MAAI;AACF,UAAMC,KAAK,GAAGJ,MAAM,CAACJ,MAAP,CAAcS,MAAd,CAAqB;AAAEC,MAAAA,GAAG,EAAEJ;AAAP,KAArB,EAAuCK,KAArD;AACA,WAAO,IAAIb,QAAJ,CAAa,GAAb,EAAkB,EAAlB,EAAsB;AAAEU,MAAAA;AAAF,KAAtB,CAAP;AACD,GAHD,CAGE,OAAON,KAAP,EAAc;AACd,WAAO,IAAIJ,QAAJ,CACL,GADK,EAEL,EAFK,EAGL;AACEI,MAAAA;AADF,KAHK,CAAP;AAOD;AACF,CAdM","sourcesContent":["import { Response } from \"miragejs\";\n\n/**\n * All the routes related to Videos are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all videos in the db.\n * send GET Request at /api/videos\n * */\n\nexport const getAllVideosHandler = function () {\n  try {\n    return new Response(200, {}, { videos: this.db.videos });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles uploads a new video to the db.\n * send POST Request at /api/user/videos/\n * */\n\n// TODO: postVideoHandler\n\n/**\n * This handler handles gets all videos in the db.\n * send GET Request at /api/user/videos/:videoId\n * */\n\nexport const getVideoHandler = function (schema, request) {\n  const { videoId } = request.params;\n  try {\n    const video = schema.videos.findBy({ _id: videoId }).attrs;\n    return new Response(200, {}, { video });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}