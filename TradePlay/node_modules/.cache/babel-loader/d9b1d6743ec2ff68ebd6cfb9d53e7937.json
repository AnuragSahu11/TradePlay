{"ast":null,"code":"var _jsxFileName = \"C:\\\\My stuff\\\\S\\\\2022 Projects\\\\video library app\\\\TradePlay\\\\TradePlay\\\\src\\\\components\\\\video-listing\\\\pages\\\\playlist-page.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { AddNewPlaylistModal } from \"../../../utils/add-new-playlist-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Playlist = () => {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const clickHandler = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isModalOpen && /*#__PURE__*/_jsxDEV(AddNewPlaylistModal, {\n      isModalOpen: isModalOpen,\n      switchModal: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Playlist, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n\n_c = Playlist;\nexport { Playlist };\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["C:/My stuff/S/2022 Projects/video library app/TradePlay/TradePlay/src/components/video-listing/pages/playlist-page.jsx"],"names":["useState","AddNewPlaylistModal","Playlist","isModalOpen","setIsModalOpen","clickHandler","prevState"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,uCAApC;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMK,YAAY,GAAG,MAAM;AACzBD,IAAAA,cAAc,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAd;AACD,GAFD;;AAIA,sBAAQ;AAAA,cACPH,WAAW,iBACN,QAAC,mBAAD;AACE,MAAA,WAAW,EAAEA,WADf;AAEE,MAAA,WAAW,EAAEC;AAFf;AAAA;AAAA;AAAA;AAAA;AAFE,mBAAR;AAWD,CAjBD;;GAAMF,Q;;KAAAA,Q;AAkBN,SAASA,QAAT","sourcesContent":["import { useState } from \"react\";\r\nimport { AddNewPlaylistModal } from \"../../../utils/add-new-playlist-modal\";\r\n\r\nconst Playlist = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const clickHandler = () => {\r\n    setIsModalOpen((prevState) => !prevState);\r\n  };\r\n\r\n  return (<>\r\n  {isModalOpen && (\r\n        <AddNewPlaylistModal\r\n          isModalOpen={isModalOpen}\r\n          switchModal={setIsModalOpen}\r\n        />\r\n      )}\r\n\r\n  </>\r\n    \r\n  );\r\n};\r\nexport { Playlist };\r\n"]},"metadata":{},"sourceType":"module"}